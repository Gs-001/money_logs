Level 1:

Users Dashboard         -  GET      /users/[user-id]/dashboard
- Account templates       -  GET      /acconts/templates
Add Account             -  POST     /users/[user-id]/accounts
New Records             -  POST     /users/[user-id]/records/
Record meta data        -  GET      /records/meta
Fetch Users records     -  GET      /users/[user-id]/records


Level 2:

Fetch record receipt    -  GET      /users/[user-id]/records/[record-id]/receipt
- User Details            -  GET      /users/[user-id]
Fetch Stats             -  GET      /users/[user-id]/stats

------------------------------------------------------------------------------------

To Do:
    - Finalise how to process cards data

    ** Next Steps
        - Different account templates at time of adding new account
        - User details API

-------------------------------------------------------------------------------------

Cards:
    - pie-chart

-------------------------------------------------------------------------------------

User's dashboard

GET /users/[user-id]/dashboard

RESPONSE:

{
    accounts: [
        {
            "id": "32r23f3"
            "title": "SBI Credit Card",
            "type": "Credit Card",
            "currency": "INR",
            "amount": 1231
    }
        ...
    ],

    cards: [
        {
            "title": "Expense Structure",
            "type": "pie-chart",
            "description": "Last 30 days",
            "details_button": {
                "title": "All Stats",
                "url": "/user/[user-id]/stats"
            },
            "content": [
                {
                    "title": "Clothing",
                    "sum": "20",
                    "color": "blue" (#HEX)
                },
                ...
            ]
        },
        {
            "title": "Last Records Overview",
            "type": "last-records",
            "description": "Last 30 days",
            "details_button": {
                "title": "All Records",
                "url": "/user/[user-id]/records"
            },
            "content": [
                {
                    "id": "34r23r3e",
                    "title": "Record 1 Title",
                    "sum": 3234,
                    "date": "26-10-72"
                },
                ...
            ]
        }
    ]
}

-------------------------------------------------------------------------------------

Account Meta Data

GET /accounts/details

Notes:
    * account_type would be changed in the coming time so keeping the `id` field for now.

RESPONSE:

{
    data: {
        account_type: [
            {
                "id": 23rg2,
                "title": "Credit Card"
                "fields": (JSON Schema)
            },
            ...
        ]
        currencies: {
            "INR",
            "USD",
            "PESO"
        }
    }
}

-------------------------------------------------------------------------------------

Add Account (To be updated)

POST /users/[user-id]/accounts

Notes:
- Authentication header or URL parameter for user-id
- Or possible both (?)

REQUEST:
{
    "account_details": {
        "title": "SBI Credit Card",
        "type": "Credit Card",
        "currency": "INR",
        "amount": 1231
    }
}


-------------------------------------------------------------------------------------

Record meta data

GET /records/details

RESPONSE:
{
    data: {
        accounts: [
            {
                "id": "32r23f3"
                "title": "SBI Credit Card",
                "type": "Credit Card",
                "currency": "INR",
                "amount": 1231
            },
            ...
        ],

        labels: [
            "Food",
            "Eating Out",
            "swiggy",
            ...
        ],

        categories: [
            "Life and Entertainment",
            "Food & Drinks",
            ...
        ],

        "record_types": [
            "income",
            "expense",
            "transfer"
        ]
    }
}


-------------------------------------------------------------------------------------

New Records

POST /users/[user-id]/records/

Notes:
- Authentication header or URL parameter for user-id


REQUEST:
{
    "record_details": {
        "type": "income/expense/transfer",
        "title": "Record Title",
        "account_id": "5656",
        "category": "Food & Drinks",
        "amount": 1234,
        "date": "26-10-72",
        "receipt": (Image File),
        "labels": [food, drinks, last-txn]
    }
}

-------------------------------------------------------------------------------------

Fetch Users records

GET      /users/[user-id]/records

Notes:
- Implement Pagination
- Sorting done on Frontend

RESPONSE:
{
    "records": [
        {
            "title": "record title",
            "type": "income/expense/transfer",
            "category": "Food & Drinks",
            "date": "26-10-99",
            "account_title": "SBI"
            "labels": [food, drinks, last-txn]
            "receipt_available": "False/True"
        }

        ...
    ]
}

-------------------------------------------------------------------------------------

Fetch record receipt

GET      /users/[user-id]/records/[record-id]/receipt

RESPONSE:

 - Image file associated with the record ID - 


-------------------------------------------------------------------------------------

Fetch Stats

GET      /users/[user-id]/stats

Notes:
    - Time duration parameter (optional)
    - Only pie-chart implemented for now, more to be added


RESPONSE:

{
    "sections": [
        {
            "title": "balance",
            "txns_count": 342
            "cards: [
                {
                    "title": "Expense Structure",
                    "type": "pie-chart",
                    "description": "Last 30 days",
                    "details": {
                        "title": "All Stats",
                        "url": "/user/[user-id]/stats"
                    },
                    "content": [
                        {
                            "title": "Clothing",
                            "sum": "20",
                            "color": "blue" (#HEX)
                        },
                        ...
                    ]
                },
            ]
        }
    ]
}